// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app/pb/rpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Binder struct {
	BlockA               []string `protobuf:"bytes,1,rep,name=block_a,json=blockA,proto3" json:"block_a,omitempty"`
	BlockB               []string `protobuf:"bytes,2,rep,name=block_b,json=blockB,proto3" json:"block_b,omitempty"`
	BlockC               []string `protobuf:"bytes,3,rep,name=block_c,json=blockC,proto3" json:"block_c,omitempty"`
	BlockD               []string `protobuf:"bytes,4,rep,name=block_d,json=blockD,proto3" json:"block_d,omitempty"`
	BlockE               []string `protobuf:"bytes,5,rep,name=block_e,json=blockE,proto3" json:"block_e,omitempty"`
	BlockF               []string `protobuf:"bytes,6,rep,name=block_f,json=blockF,proto3" json:"block_f,omitempty"`
	BlockG               []string `protobuf:"bytes,7,rep,name=block_g,json=blockG,proto3" json:"block_g,omitempty"`
	BlockH               []string `protobuf:"bytes,8,rep,name=block_h,json=blockH,proto3" json:"block_h,omitempty"`
	BlockI               []string `protobuf:"bytes,9,rep,name=block_i,json=blockI,proto3" json:"block_i,omitempty"`
	BlockJ               []string `protobuf:"bytes,10,rep,name=block_j,json=blockJ,proto3" json:"block_j,omitempty"`
	BlockK               []string `protobuf:"bytes,11,rep,name=block_k,json=blockK,proto3" json:"block_k,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Binder) Reset()         { *m = Binder{} }
func (m *Binder) String() string { return proto.CompactTextString(m) }
func (*Binder) ProtoMessage()    {}
func (*Binder) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4abb12d9331e051, []int{0}
}

func (m *Binder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binder.Unmarshal(m, b)
}
func (m *Binder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binder.Marshal(b, m, deterministic)
}
func (m *Binder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binder.Merge(m, src)
}
func (m *Binder) XXX_Size() int {
	return xxx_messageInfo_Binder.Size(m)
}
func (m *Binder) XXX_DiscardUnknown() {
	xxx_messageInfo_Binder.DiscardUnknown(m)
}

var xxx_messageInfo_Binder proto.InternalMessageInfo

func (m *Binder) GetBlockA() []string {
	if m != nil {
		return m.BlockA
	}
	return nil
}

func (m *Binder) GetBlockB() []string {
	if m != nil {
		return m.BlockB
	}
	return nil
}

func (m *Binder) GetBlockC() []string {
	if m != nil {
		return m.BlockC
	}
	return nil
}

func (m *Binder) GetBlockD() []string {
	if m != nil {
		return m.BlockD
	}
	return nil
}

func (m *Binder) GetBlockE() []string {
	if m != nil {
		return m.BlockE
	}
	return nil
}

func (m *Binder) GetBlockF() []string {
	if m != nil {
		return m.BlockF
	}
	return nil
}

func (m *Binder) GetBlockG() []string {
	if m != nil {
		return m.BlockG
	}
	return nil
}

func (m *Binder) GetBlockH() []string {
	if m != nil {
		return m.BlockH
	}
	return nil
}

func (m *Binder) GetBlockI() []string {
	if m != nil {
		return m.BlockI
	}
	return nil
}

func (m *Binder) GetBlockJ() []string {
	if m != nil {
		return m.BlockJ
	}
	return nil
}

func (m *Binder) GetBlockK() []string {
	if m != nil {
		return m.BlockK
	}
	return nil
}

// The BinderResponse message
type BinderResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinderResponse) Reset()         { *m = BinderResponse{} }
func (m *BinderResponse) String() string { return proto.CompactTextString(m) }
func (*BinderResponse) ProtoMessage()    {}
func (*BinderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4abb12d9331e051, []int{1}
}

func (m *BinderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinderResponse.Unmarshal(m, b)
}
func (m *BinderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinderResponse.Marshal(b, m, deterministic)
}
func (m *BinderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinderResponse.Merge(m, src)
}
func (m *BinderResponse) XXX_Size() int {
	return xxx_messageInfo_BinderResponse.Size(m)
}
func (m *BinderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BinderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BinderResponse proto.InternalMessageInfo

func (m *BinderResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Binder)(nil), "Binder")
	proto.RegisterType((*BinderResponse)(nil), "BinderResponse")
}

func init() { proto.RegisterFile("app/pb/rpc.proto", fileDescriptor_c4abb12d9331e051) }

var fileDescriptor_c4abb12d9331e051 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0xd1, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x06, 0xf0, 0xa6, 0x7f, 0x36, 0xcd, 0x08, 0x2a, 0x7b, 0x71, 0xe8, 0xa9, 0x44, 0x0f, 0xc5,
	0x43, 0x02, 0xfa, 0x04, 0x8d, 0xf5, 0xff, 0x2d, 0x20, 0x82, 0x17, 0xd9, 0x24, 0x63, 0x8d, 0xad,
	0xcd, 0x90, 0xf4, 0x61, 0x04, 0x5f, 0x56, 0xe8, 0x52, 0x66, 0xbc, 0xe8, 0x6d, 0xbf, 0xfd, 0x7d,
	0xb0, 0xb0, 0x1f, 0x1c, 0x3b, 0xe6, 0x94, 0x8b, 0xb4, 0xe5, 0x32, 0xe1, 0xb6, 0xd9, 0x36, 0xf1,
	0x77, 0x1f, 0x4c, 0x56, 0x6f, 0x2a, 0x6a, 0xed, 0x09, 0x84, 0xc5, 0xba, 0x29, 0x57, 0xaf, 0x0e,
	0x83, 0xe9, 0x60, 0x16, 0xe5, 0x66, 0x17, 0xe7, 0x02, 0x05, 0xf6, 0x15, 0x64, 0x02, 0x25, 0x0e,
	0x14, 0x5c, 0x09, 0x54, 0x38, 0x54, 0xb0, 0x10, 0x20, 0x1c, 0x29, 0xb8, 0x16, 0x78, 0x43, 0xa3,
	0xe0, 0x46, 0x60, 0x89, 0xa1, 0x82, 0x5b, 0x81, 0x77, 0x1c, 0x2b, 0xb8, 0x13, 0xa8, 0x31, 0x52,
	0x70, 0x2f, 0xf0, 0x81, 0xa0, 0xe0, 0x41, 0x60, 0x85, 0x07, 0x0a, 0x1e, 0xe3, 0x73, 0x38, 0xf4,
	0x9f, 0x93, 0x53, 0xc7, 0xcd, 0xa6, 0x23, 0x8b, 0x10, 0x7e, 0x52, 0xd7, 0xb9, 0x25, 0x61, 0x30,
	0x0d, 0x66, 0x51, 0xbe, 0x8f, 0x17, 0x5f, 0x01, 0x44, 0xbe, 0x3c, 0xe7, 0xda, 0x4e, 0x60, 0x98,
	0x93, 0xab, 0x6c, 0x98, 0xf8, 0xbb, 0xc9, 0xfe, 0x10, 0xf7, 0xec, 0x29, 0x8c, 0x9e, 0xdb, 0x7a,
	0x4b, 0x82, 0x47, 0xc9, 0xef, 0x67, 0xe2, 0x9e, 0x3d, 0x03, 0xb3, 0xa0, 0x35, 0xfd, 0xdf, 0x7a,
	0xe2, 0xca, 0xfd, 0xdd, 0xca, 0xe0, 0x65, 0x9c, 0xa4, 0x7e, 0xfa, 0xc2, 0xec, 0x76, 0xbf, 0xfc,
	0x09, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xc5, 0xeb, 0x9b, 0x0b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BinderApiClient is the client API for BinderApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BinderApiClient interface {
	// Read a record from the database
	Read(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*Binder, error)
	// Write a record to the database
	Write(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*BinderResponse, error)
	// Delete a record from the database
	Delete(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*BinderResponse, error)
	// Update a record in the database
	Update(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*BinderResponse, error)
}

type binderApiClient struct {
	cc *grpc.ClientConn
}

func NewBinderApiClient(cc *grpc.ClientConn) BinderApiClient {
	return &binderApiClient{cc}
}

func (c *binderApiClient) Read(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*Binder, error) {
	out := new(Binder)
	err := c.cc.Invoke(ctx, "/BinderApi/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binderApiClient) Write(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*BinderResponse, error) {
	out := new(BinderResponse)
	err := c.cc.Invoke(ctx, "/BinderApi/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binderApiClient) Delete(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*BinderResponse, error) {
	out := new(BinderResponse)
	err := c.cc.Invoke(ctx, "/BinderApi/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *binderApiClient) Update(ctx context.Context, in *Binder, opts ...grpc.CallOption) (*BinderResponse, error) {
	out := new(BinderResponse)
	err := c.cc.Invoke(ctx, "/BinderApi/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BinderApiServer is the server API for BinderApi service.
type BinderApiServer interface {
	// Read a record from the database
	Read(context.Context, *Binder) (*Binder, error)
	// Write a record to the database
	Write(context.Context, *Binder) (*BinderResponse, error)
	// Delete a record from the database
	Delete(context.Context, *Binder) (*BinderResponse, error)
	// Update a record in the database
	Update(context.Context, *Binder) (*BinderResponse, error)
}

// UnimplementedBinderApiServer can be embedded to have forward compatible implementations.
type UnimplementedBinderApiServer struct {
}

func (*UnimplementedBinderApiServer) Read(ctx context.Context, req *Binder) (*Binder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}
func (*UnimplementedBinderApiServer) Write(ctx context.Context, req *Binder) (*BinderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedBinderApiServer) Delete(ctx context.Context, req *Binder) (*BinderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedBinderApiServer) Update(ctx context.Context, req *Binder) (*BinderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterBinderApiServer(s *grpc.Server, srv BinderApiServer) {
	s.RegisterService(&_BinderApi_serviceDesc, srv)
}

func _BinderApi_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Binder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinderApiServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BinderApi/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinderApiServer).Read(ctx, req.(*Binder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinderApi_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Binder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinderApiServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BinderApi/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinderApiServer).Write(ctx, req.(*Binder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinderApi_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Binder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinderApiServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BinderApi/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinderApiServer).Delete(ctx, req.(*Binder))
	}
	return interceptor(ctx, in, info, handler)
}

func _BinderApi_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Binder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BinderApiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BinderApi/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BinderApiServer).Update(ctx, req.(*Binder))
	}
	return interceptor(ctx, in, info, handler)
}

var _BinderApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BinderApi",
	HandlerType: (*BinderApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _BinderApi_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _BinderApi_Write_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _BinderApi_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _BinderApi_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/pb/rpc.proto",
}
